#!/usr/bin/env perl

use strict;
use warnings;
use Time::HiRes qw( time );

my $corpus = $ARGV[0] ? $ARGV[0] : 'corpus-syslog';

my @alert = load_regex_file('regex-alert');
print 'Loaded ' . scalar(@alert) . " alert\n";
my @suppress = load_regex_file('regex-suppress');
print 'Loaded ' . scalar(@suppress) . " suppress\n";

my $starttime = time;

# Apply regexes to corpus, counting hits and misses
my $total_count = 0;
my $alert_count = 0;
my $suppress_count = 0;
my $limbo_count = 0;
open(my $cfh, '<', $corpus) or die;
LINE: while(my $line = <$cfh>) {
  $total_count++;
  foreach my $alert (@alert) {
    if ($line =~ $alert) {
      $alert_count++;
      next LINE;
    }
  }
  foreach my $suppress (@suppress) {
    if ($line =~ $suppress) {
      $suppress_count++;
      next LINE;
    }
  }
  $limbo_count++;
}
close($cfh);

my $endtime = time;

# Print time and counters
print 'Elapsed time: ', $endtime - $starttime, "\n";
print "Total: $total_count\n";
print "Alert: $alert_count\n";
print "Suppress: $suppress_count\n";
print "Limbo: $limbo_count\n";

#
# Subroutines
#

sub load_regex_file {
  my ($file) = @_;
  my @regexes;
  open(my $fh, '<', $file) or die;
  while(my $line = <$fh>) {
    chomp($line);
    # Skip comments and blank lines
    next if $line =~ /^\s*#/;
    next if $line =~ /^\s*$/;
    push(@regexes, qr/$line/);
  }
  close($fh);
  return(@regexes);
}
